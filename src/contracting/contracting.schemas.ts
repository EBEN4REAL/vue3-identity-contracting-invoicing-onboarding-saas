/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/service-providers/{service_provider_id}/legal-document-types": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieves all legal document types of a Service provider. */
        get: operations["get_legal_document_types_service_providers__service_provider_id__legal_document_types_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/service-providers/{service_provider_id}/legal-document-types/{legal_document_type_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieves a legal document type */
        get: operations["get_legal_document_type_service_providers__service_provider_id__legal_document_types__legal_document_type_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/service-providers/{service_provider_id}/legal-document-types/{legal_document_type_id}/pdf": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get PDF Pre Signed URL for a legal document type. */
        get: operations["get_legal_document_type_pdf_url_service_providers__service_provider_id__legal_document_types__legal_document_type_id__pdf_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/service-providers/{service_provider_id}/agreement-types/{agreement_type_id}/legal-document-types": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List all Legal Document Types for an Agreement Type */
        get: operations["get_legal_document_types_for_agreement_type_service_providers__service_provider_id__agreement_types__agreement_type_id__legal_document_types_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/service-providers/{service_provider_id}/legal-documents": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List all Legal Documents for a Service Provider */
        get: operations["get_legal_documents_for_service_provider_service_providers__service_provider_id__legal_documents_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/service-providers/{service_provider_id}/agreements/{agreement_id}/legal-documents": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List all Legal Documents for an Agreement */
        get: operations["get_legal_documents_for_agreement_service_providers__service_provider_id__agreements__agreement_id__legal_documents_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/service-consumers/{service_consumer_id}/signatures": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create signature for legal documents */
        post: operations["create_signatures_service_consumers__service_consumer_id__signatures_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/service-consumers/{service_consumer_id}/legal-document-types/{legal_document_type_id}/pdf": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get PDF Pre Signed URL for a legal document type. */
        get: operations["get_legal_document_type_pdf_url_service_consumers__service_consumer_id__legal_document_types__legal_document_type_id__pdf_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/service-consumers/{service_consumer_id}/agreements/{agreement_id}/legal-documents": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List all Legal Documents for an Agreement with Service Consumer */
        get: operations["get_legal_documents_for_agreement_service_consumers__service_consumer_id__agreements__agreement_id__legal_documents_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/service-consumers/{service_consumer_id}/agreement-types/{agreement_type_id}/legal-document-types": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List all Legal Document Types for an Agreement Type of Service Consumer */
        get: operations["get_legal_document_types_for_agreement_type_with_sc_service_consumers__service_consumer_id__agreement_types__agreement_type_id__legal_document_types_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/unload/e2e": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Unload E2E */
        get: operations["unload_e2e_unload_e2e_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** LegalDocumentRead */
        LegalDocumentRead: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Service Consumer Id */
            service_consumer_id?: string | null;
            /** Service Provider Id */
            service_provider_id?: string | null;
            /**
             * Legal Document Type
             * Format: uuid
             */
            legal_document_type: string;
            /** Pdf Filename */
            pdf_filename?: string | null;
            /**
             * Date Created
             * Format: date-time
             */
            date_created: string;
            /** Name */
            name?: string | null;
        };
        /** LegalDocumentTypePdfPreSignUrl */
        LegalDocumentTypePdfPreSignUrl: {
            /** Pdf Url */
            pdf_url: string;
        };
        /** LegalDocumentTypeRead */
        LegalDocumentTypeRead: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /**
             * Service Provider Id
             * Format: uuid
             */
            service_provider_id: string;
            /** Name */
            name: string;
            /** Description */
            description?: string | null;
            text_source: components["schemas"]["TextSourceOption"];
            /** Signature Required From Sc */
            signature_required_from_SC: boolean;
            /** Signature Required From Sp */
            signature_required_from_SP: boolean;
            /** Signature Required From End User */
            signature_required_from_end_user: boolean;
            /** Version Reference */
            version_reference?: string | null;
            /** Finished Create */
            finished_create: boolean;
            /** Legal Document Count */
            legal_document_count?: number | null;
            /** Pdf Filename */
            pdf_filename?: string | null;
            /** Pdf Size */
            pdf_size?: number | null;
            /** In Use */
            in_use: boolean;
            /** Agreement Type Ids */
            agreement_type_ids?: string[] | null;
            /** External Facing Name */
            external_facing_name: string;
            /**
             * Created Date
             * Format: date-time
             */
            created_date: string;
        };
        /** LegalDocumentTypeWithLegalDocumentRead */
        LegalDocumentTypeWithLegalDocumentRead: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Name */
            name: string;
            /** Description */
            description?: string | null;
            /** Legal Documents */
            legal_documents: components["schemas"]["LegalDocumentRead"][];
        };
        /** LegalDocumentTypeWithPdfSyncStatusRead */
        LegalDocumentTypeWithPdfSyncStatusRead: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Name */
            name: string;
            /** Description */
            description?: string | null;
            pdf_sync_status?: components["schemas"]["SyncStatus"] | null;
        };
        /** PaginationSchema[LegalDocumentRead] */
        PaginationSchema_LegalDocumentRead_: {
            /** Offset */
            offset: number;
            /** Limit */
            limit: number;
            /** Results */
            results: components["schemas"]["LegalDocumentRead"][];
            /** Size */
            size: number;
            /** Total */
            total?: number | null;
        };
        /** PaginationSchema[LegalDocumentTypeRead] */
        PaginationSchema_LegalDocumentTypeRead_: {
            /** Offset */
            offset: number;
            /** Limit */
            limit: number;
            /** Results */
            results: components["schemas"]["LegalDocumentTypeRead"][];
            /** Size */
            size: number;
            /** Total */
            total?: number | null;
        };
        /** PaginationSchema[LegalDocumentTypeWithLegalDocumentRead] */
        PaginationSchema_LegalDocumentTypeWithLegalDocumentRead_: {
            /** Offset */
            offset: number;
            /** Limit */
            limit: number;
            /** Results */
            results: components["schemas"]["LegalDocumentTypeWithLegalDocumentRead"][];
            /** Size */
            size: number;
            /** Total */
            total?: number | null;
        };
        /** PaginationSchema[LegalDocumentTypeWithPdfSyncStatusRead] */
        PaginationSchema_LegalDocumentTypeWithPdfSyncStatusRead_: {
            /** Offset */
            offset: number;
            /** Limit */
            limit: number;
            /** Results */
            results: components["schemas"]["LegalDocumentTypeWithPdfSyncStatusRead"][];
            /** Size */
            size: number;
            /** Total */
            total?: number | null;
        };
        /** PaginationSchema[SPLegalDocumentRead] */
        PaginationSchema_SPLegalDocumentRead_: {
            /** Offset */
            offset: number;
            /** Limit */
            limit: number;
            /** Results */
            results: components["schemas"]["SPLegalDocumentRead"][];
            /** Size */
            size: number;
            /** Total */
            total?: number | null;
        };
        /** SPLegalDocumentRead */
        SPLegalDocumentRead: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Service Consumer Id */
            service_consumer_id?: string | null;
            /** Service Provider Id */
            service_provider_id?: string | null;
            /**
             * Legal Document Type
             * Format: uuid
             */
            legal_document_type: string;
            /** Pdf Filename */
            pdf_filename?: string | null;
            /**
             * Date Created
             * Format: date-time
             */
            date_created: string;
            /** Name */
            name?: string | null;
            /** External Facing Name */
            external_facing_name: string;
        };
        /** SignatureCreate */
        SignatureCreate: {
            /** Legal Document Ids */
            legal_document_ids: string[];
        };
        /**
         * SyncStatus
         * @enum {string}
         */
        SyncStatus: "P" | "S" | "F" | "PENDING" | "SUCCESS" | "FAILURE";
        /**
         * TextSourceOption
         * @enum {string}
         */
        TextSourceOption: "pdf" | "url" | "text";
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    get_legal_document_types_service_providers__service_provider_id__legal_document_types_get: {
        parameters: {
            query?: {
                /** @description Legal Document Types Offset */
                offset?: number;
                /** @description Max number of Legal Document Types */
                limit?: number;
                /** @description ID of the Agreement Type */
                agreement_type_id?: string | null;
                /** @description Search in Legal Document Types using fields (name, ) */
                query?: string | null;
                /** @description Attribute used to sort the Legal Document Types: ['name'] */
                sort?: string | null;
            };
            header?: never;
            path: {
                /** @description ID of the Service Provider */
                service_provider_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description List of Legal Document Types */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginationSchema_LegalDocumentTypeRead_"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_legal_document_type_service_providers__service_provider_id__legal_document_types__legal_document_type_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description ID of the Service Provider */
                service_provider_id: string;
                /** @description ID of the Legal Document Type */
                legal_document_type_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Legal Document Type */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LegalDocumentTypeRead"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Legal Document Type not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_legal_document_type_pdf_url_service_providers__service_provider_id__legal_document_types__legal_document_type_id__pdf_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description ID of the Legal Document Type */
                legal_document_type_id: string;
                /** @description ID of the Service Provider */
                service_provider_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Legal Document Type PDF Pre Signed URL retrieved */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LegalDocumentTypePdfPreSignUrl"];
                };
            };
            /** @description Invalid Text Source or PDF Sync Status */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Legal Document Type Not Found for Service Provider */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description AWS S3 Service Exception */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    get_legal_document_types_for_agreement_type_service_providers__service_provider_id__agreement_types__agreement_type_id__legal_document_types_get: {
        parameters: {
            query?: {
                /** @description Offset */
                offset?: number;
                /** @description Max number of Legal Document Types */
                limit?: number;
                /** @description A search query is used to search legal document types using (name, description) */
                query?: string | null;
                /** @description Attribute used to sort the Legal Document Types: ['finished_create', 'text_source', 'name', 'signature_required_from_SC', 'signature_required_from_SP', 'signature_required_from_end_user', 'service_provider_id', 'version_reference', 'pdf_sync_status', 'pdf_filename', 'pdf_size'] */
                sort?: string | null;
            };
            header?: never;
            path: {
                /** @description ID of the Service Provider */
                service_provider_id: string;
                /** @description ID of the Agreement Type */
                agreement_type_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Legal Document Types for Agreement Type */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginationSchema_LegalDocumentTypeWithPdfSyncStatusRead_"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Legal Document Types for Agreement Type not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_legal_documents_for_service_provider_service_providers__service_provider_id__legal_documents_get: {
        parameters: {
            query?: {
                /** @description ID of the Service Consumer */
                service_consumer_id?: string | null;
                /** @description Legal Document Offset */
                offset?: number;
                /** @description Max number of Legal Documents */
                limit?: number;
                /** @description A search query is used to search legal documents using (legal_document_type_name, legal_document_type_description) */
                query?: string | null;
                /** @description Attribute used to sort the Legal Documents: ['legal_document.signed_date', 'legal_document.legal_document_type'] */
                sort?: string | null;
            };
            header?: never;
            path: {
                /** @description ID of the Service Provider */
                service_provider_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Legal Documents */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginationSchema_SPLegalDocumentRead_"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_legal_documents_for_agreement_service_providers__service_provider_id__agreements__agreement_id__legal_documents_get: {
        parameters: {
            query?: {
                /** @description Filter Legal document that needs to be signed */
                fully_signed?: boolean | null;
            };
            header?: never;
            path: {
                /** @description ID of the Service Provider */
                service_provider_id: string;
                /** @description ID of the Agreement */
                agreement_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Legal Documents for Agreement */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginationSchema_LegalDocumentRead_"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Legal Documents for Agreement not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_signatures_service_consumers__service_consumer_id__signatures_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description ID of the Service Consumer */
                service_consumer_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SignatureCreate"];
            };
        };
        responses: {
            /** @description Signature Created */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Legal Document ID not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_legal_document_type_pdf_url_service_consumers__service_consumer_id__legal_document_types__legal_document_type_id__pdf_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description ID of the Legal Document Type */
                legal_document_type_id: string;
                /** @description ID of the Service Consumer */
                service_consumer_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Legal Document Type PDF Pre Signed URL retrieved */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LegalDocumentTypePdfPreSignUrl"];
                };
            };
            /** @description Invalid Text Source or PDF Sync Status */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Legal Document Type Not Found for Service Provider */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description AWS S3 Service Exception */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    get_legal_documents_for_agreement_service_consumers__service_consumer_id__agreements__agreement_id__legal_documents_get: {
        parameters: {
            query?: {
                /** @description Filter Legal document that needs to be signed */
                fully_signed?: boolean | null;
            };
            header?: never;
            path: {
                /** @description ID of the Service Consumer */
                service_consumer_id: string;
                /** @description ID of the Agreement */
                agreement_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Legal Documents for Agreement */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginationSchema_LegalDocumentRead_"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Legal Documents for Agreement not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_legal_document_types_for_agreement_type_with_sc_service_consumers__service_consumer_id__agreement_types__agreement_type_id__legal_document_types_get: {
        parameters: {
            query?: {
                /** @description Legal Document Offset */
                offset?: number;
                /** @description Max number of Legal Documents */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description ID of the Service Consumer */
                service_consumer_id: string;
                /** @description ID of the Agreement Type */
                agreement_type_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Legal Document Types for Agreement Type */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginationSchema_LegalDocumentTypeWithLegalDocumentRead_"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Legal Document Types for Agreement Type not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    unload_e2e_unload_e2e_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
